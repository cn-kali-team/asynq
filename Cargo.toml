[package]
name = "asynq"
version = "0.1.0"
edition = "2021"
license = "MIT"
authors = ["Kali-Team <root@kali-team.cn>"]
description = "Simple, reliable & efficient distributed task queue in Rust, inspired by hibiken/asynq"
readme = "README.md"
homepage = "https://github.com/emo-crab/asynq"
repository = "https://github.com/emo-crab/asynq"
keywords = ["async", "redis", "task-queue", "distributed", "worker"]
categories = ["asynchronous", "database", "concurrency"]

[dependencies]
# Redis 连接池和客户端
redis = { version = "0.32.6", features = ["tokio-comp", "cluster-async", "aio", "connection-manager", "streams"] }

# 序列化和反序列化
serde = { version = "1", features = ["derive"] }
serde_json = { version = "1.0", optional = true }

# 异步运行时
tokio = { version = "1.0", features = ["rt", "macros", "signal", "rt-multi-thread"], default-features = false }
tokio-util = "0.7"

# 日志
tracing = "0.1"
# 错误处理
thiserror = "2.0"
anyhow = "1.0"

# 时间处理
chrono = { version = "0.4", features = ["serde"], default-features = false }

# UUID 生成
uuid = { version = "1.0", features = ["v4", "serde"] }

# MD5 哈希（用于唯一键生成，与 Go 版本兼容）
md5 = "0.8"

# Protocol Buffers
prost = "0.14"
prost-types = "0.14"

# 异步特征
async-trait = "0.1"

# 其他工具库
futures = "0.3"
futures-util = "0.3"
hostname = "0.4"
num_cpus = "1.0"
rand = "0.9"
cron = "0.15.0"
phf = { version = "0.13.1", features = ["macros"] }

[features]
json = ["serde_json"]

[build-dependencies]
prost-build = "0.14"

[dev-dependencies]
serde_json = { version = "1.0" }
tracing-subscriber = { version = "=0.3.20", features = ["env-filter", "fmt"] }

#https://github.com/johnthagen/min-sized-rust
[profile.release]
opt-level = "z"   # Optimize for size.
lto = true        # Enable Link Time Optimization
codegen-units = 1 # Reduce number of codegen units to increase optimizations.
panic = "abort"   # Abort on panic
strip = true      # Automatically strip symbols from the binary.

[profile.dev.package."*"]
opt-level = 3
[profile.test]
opt-level = 3
lto = "thin"

[profile.bench]
lto = true
codegen-units = 1
opt-level = 3

[[example]]
name = "producer"
path = "examples/producer.rs"

[[example]]
name = "consumer"
path = "examples/consumer.rs"

[[example]]
name = "cancellation_example"
path = "examples/cancellation_example.rs"

[[example]]
name = "server_with_cancellation"
path = "examples/server_with_cancellation.rs"

[[example]]
name = "enqueue_long_tasks"
path = "examples/enqueue_long_tasks.rs"

[[example]]
name = "cancel_tasks"
path = "examples/cancel_tasks.rs"

[[example]]
name = "cluster_pubsub_example"
path = "examples/cluster_pubsub_example.rs"

[lib]
name = "asynq"
path = "src/lib.rs"
